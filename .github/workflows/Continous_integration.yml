name: CI Build

env:
  main_project_module: fetchai
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}

on:
  push:
    branches:
      - "release/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set current date and time as env variable
        run: echo "date_today=$(date +'%Y-%m-%dT%H:%M')" >> $GITHUB_ENV

      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Extract branch tag
        run: echo "BRANCH_TAG=$(echo ${GITHUB_REF#refs/heads/release/})" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run gradle tests
        run: ./gradlew test

      - name: display the list of env variables
        run: env

      - name: Build gradle project
        run: ./gradlew build

      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      - name: display folder build
        run: ls -la ./app/build/outputs/apk/release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ env.BRANCH_TAG }}
          release_name: Release ${{ env.BRANCH_TAG }}
          draft: false
          prerelease: false

      # Upload APK Debug
      - name: Upload APK Debug to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/debug/debug.apk
          asset_name: Debug-${{ env.date_today }}.apk
          asset_content_type: application/vnd.android.package-archive

      # Upload APK Release
      - name: Upload APK Release to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: Release-${{ env.date_today }}.apk
          asset_content_type: application/vnd.android.package-archive
